# class Dog():
#     def __init__(self,name,age):
#         #初始化属性name，age
#         self.name=name
#         self.age=age
#     def sit(self):
#         #模拟小狗被命令时蹲下
#         print(self.name.title()+" is now sitting.")
#
#     def roll_over(self):
#         #模拟小狗被命令时打滚
#         print(self.name.title()+" rolled over!")
#
#
#
# my_dog=Dog('willie',6)
# print("My dog's name is "+my_dog.name.title()+".")
# print("My dog is "+str(my_dog.age)+" years old.")
# my_dog.sit()
# my_dog.roll_over()




# 9.1习题
# class Restaurant():
#     def __init__(self,restaurant_name,restaurant_type):
#         self.restaurant_name=restaurant_name.title()
#         self.restaurant_type=restaurant_type
#
#     def describe_restaurant(self):
#         print("The name of the restaurant is "+self.restaurant_name)
#         print("The type of the restaurant is "+self.restaurant_type)
#
#     def open_resturant(self):
#         print("The restaurant is open")
#
# # restaurant=Restaurant('sea','chinese food')
# # print(restaurant.restaurant_name.title(),restaurant.restaurant_type)
# # restaurant.describe_restaurant()
# # restaurant.open_resturant()
#
#
# restaurant1=Restaurant('sea','chinese food')
# restaurant2=Restaurant('sunshine','india food')
# restaurant3=Restaurant('beach','singapore food')
# restaurant1.describe_restaurant()
# restaurant2.describe_restaurant()
# restaurant3.describe_restaurant()



# class User():
#     def __init__(self,first_name,last_name,age,sex):
#         self.first_name=first_name
#         self.last_name=last_name
#         self.age = age
#         self.sex = sex
#
#
#     def describ_user(self):
#         print("The name of the user is "+self.first_name+self.last_name)
#         print("The age of the user is "+str(self.age))
#         print("The sex of the user is "+self.sex)
#
#     def greet_user(self):
#         print("Welcome back "+self.first_name+self.last_name)
#
# user=User('qiu','shuang',22,'girl')
# print(user.last_name,user.first_name)
# user.describ_user()
# user.greet_user()


#9.2内容
# class Car():
#     def __init__(self,make,model,year):
#         self.make = make
#         self.model = model
#         self.year = year
#         self.odomater_reading=0
#
#     def get_descriptive_name(self):
#         long_time=str(self.year)+' '+self.make+' '+self.model
#         return long_time.title()
#
#     def read_odomater(self):
#         print("This car has "+str(self.odomater_reading)+" miles on it.")
#
#     def update_odomater(self,mileage):
#         if mileage>=self.odomater_reading:
#             self.odomater_reading=mileage
#         else:
#             print("You can not roll back an odometer")
#
#     def increment_odometer(self,miles):
#         self.odomater_reading+= miles
#
#
# my_new_car=Car('subaru','a4',2016)
# print(my_new_car.get_descriptive_name())
# # my_new_car.odomater_reading=22
# # my_new_car.read_odomater()
#
# my_new_car.update_odomater(23500)
# my_new_car.read_odomater()
#
# my_new_car.increment_odometer(100)
# my_new_car.read_odomater()



#9.2习题
# class Restaurant():
#     def __init__(self,restaurant_name,restaurant_type):
#         self.restaurant_name=restaurant_name.title()
#         self.restaurant_type=restaurant_type
#         self.number_served=0
#
#     def describe_restaurant(self):
#         print("The name of the restaurant is "+self.restaurant_name)
#         print("The type of the restaurant is "+self.restaurant_type)
#
#     def open_resturant(self):
#         print("The restaurant is open")
#
#     def set_number_served(self,num):
#         self.number_served=num
#
#
# restaurant=Restaurant('sea','chinese food')
# print(restaurant.restaurant_name.title(),restaurant.restaurant_type,restaurant.number_served)
# restaurant.set_number_served(6)
# print(restaurant.restaurant_name.title(),restaurant.restaurant_type,restaurant.number_served)
#




# class User():
#     def __init__(self,first_name,last_name,age,sex):
#         self.first_name=first_name
#         self.last_name=last_name
#         self.age = age
#         self.sex = sex
#         self.login_attempts=6
#
#
#     def describ_user(self):
#         print("The name of the user is "+self.first_name+self.last_name)
#         print("The age of the user is "+str(self.age))
#         print("The sex of the user is "+self.sex)
#
#     def greet_user(self):
#         print("Welcome back "+self.first_name+self.last_name)
#
#     def increment_login_attempts(self):
#         self.login_attempts=self.login_attempts+1
#
#     def reset_login_attempts(self):
#         self.login_attempts=0
#
# user=User('qiu','shuang',22,'girl')
# print(user.last_name,user.first_name,user.login_attempts)
# user.increment_login_attempts()
# print(user.last_name,user.first_name,user.login_attempts)
# user.increment_login_attempts()
# print(user.last_name,user.first_name,user.login_attempts)
# user.reset_login_attempts()
# print(user.last_name,user.first_name,user.login_attempts)


#9.3内容
# class Car():
#     def __init__(self,make,model,year):
#         self.make = make
#         self.model = model
#         self.year = year
#         self.odomater_reading=0
#         self.tank=0
#
#     def get_descriptive_name(self):
#         long_time=str(self.year)+' '+self.make+' '+self.model
#         return long_time.title()
#
#     def read_odomater(self):
#         print("This car has "+str(self.odomater_reading)+" miles on it.")
#
#     def update_odomater(self,mileage):
#         if mileage>=self.odomater_reading:
#             self.odomater_reading=mileage
#         else:
#             print("You can not roll back an odometer")
#
#     def increment_odometer(self,miles):
#         self.odomater_reading+= miles
#
#     def fill_gas_tank(self,tank):
#         self.tank=tank
#
#
# class Battery():
#     def __init__(self,battery_size=70):
#         self.battery_size=battery_size
#
#     def describe_battery(self):
#         print("This car has a "+str(self.battery_size)+".")
#
#     def get_range(self):
#         if self.battery_size==70:
#             range=240
#         elif self.battery_size==85:
#             range=270
#         message="This car can go approximately"+str(range)
#         message+="mile on a full charge"
#         print(message)
#
#
#
# class ElectricCar(Car):
#     def __init__(self,make,model,year):
#         super(ElectricCar, self).__init__(make,model,year)
#         self.battery=Battery()
#
#     # def describe_battery(self):
#     #     print("This car has a "+str(self.battery_size)+".")
#
#
#     def fill_gas_tank(self):
#         print("There is no gas tank")
#
# my_tesla=ElectricCar('tesla','model','2016')
# print(my_tesla.get_descriptive_name())
# #my_tesla.describe_battery()
# my_tesla.battery.describe_battery()
# my_tesla.fill_gas_tank()
# my_tesla.battery.get_range()


# 9.3习题
# class Restaurant():
#     def __init__(self,restaurant_name,restaurant_type):
#         self.restaurant_name=restaurant_name.title()
#         self.restaurant_type=restaurant_type
#         self.number_served=0
#
#     def describe_restaurant(self):
#         print("The name of the restaurant is "+self.restaurant_name)
#         print("The type of the restaurant is "+self.restaurant_type)
#
#     def open_resturant(self):
#         print("The restaurant is open")
#
#     def set_number_served(self,num):
#         self.number_served=num
# class IceCreamStand(Restaurant):
#     def __init__(self,restaurant_name,restaurant_type):
#         super(IceCreamStand, self).__init__(restaurant_name,restaurant_type)
#         self.flavors=[]
#
# icecream=IceCreamStand('rra','cold')
# print(icecream.restaurant_name)
# print(icecream.describe_restaurant())


# class User():
#     def __init__(self,first_name,last_name,age,sex):
#         self.first_name=first_name
#         self.last_name=last_name
#         self.age = age
#         self.sex = sex
#         self.login_attempts=6
#
#
#     def describ_user(self):
#         print("The name of the user is "+self.first_name+self.last_name)
#         print("The age of the user is "+str(self.age))
#         print("The sex of the user is "+self.sex)
#
#     def greet_user(self):
#         print("Welcome back "+self.first_name+self.last_name)
#
#     def increment_login_attempts(self):
#         self.login_attempts=self.login_attempts+1
#
#     def reset_login_attempts(self):
#         self.login_attempts=0
#
#
# class Admin(User):
#     def __init__(self,first_name,last_name,age,sex):
#         super(Admin, self).__init__(first_name,last_name,age,sex)
#         self.privileges=[]
#
#     def set_prvileges(self,a):
# #        for aa in a:#不需要这句话就能有正确输出，因为show_privileges 打印出来也是一个list，会到最old问题，定义是self.privileges=[]
#             self.privileges=a
#
#     def show_privilege(self):
#         print(self.privileges)
#
# # admin=Admin("qiu","shuang","8","girl")
# # admin.set_prvileges(["sdf","sss"])
# # admin.show_privilege()
#
#
#
#
# class Privileges():
#     def __init__(self,privileges=[]):
#         self.privileges=privileges
#
#     def set_prvileges(self, a):
#             #        for aa in a:#不需要这句话就能有正确输出，因为show_privileges 打印出来也是一个list，会到最old问题，定义是self.privileges=[]
#         self.privileges = a
#
#     def show_privilege(self):
#         print(self.privileges)
#
#
# class Admin(User):
#     def __init__(self, first_name, last_name, age, sex):
#         super(Admin, self).__init__(first_name, last_name, age, sex)
#         self.privileges =Privileges()
#
#
#
#
# admin = Admin("qiu", "shuang", "8", "girl")
# admin.privileges.set_prvileges(["old man", "young man"])
# admin.privileges.show_privilege()





# def upgrade_battery(self):
#     if self.




# 9.5习题2
class Die():
    def __init__(self,side=6):
        self.side=side

    def roll_die(self):
        from random import randint
        x=randint(1,int(self.side))
        print(x)

die=Die(20)
die.roll_die()
die.roll_die()
die.roll_die()
die.roll_die()
die.roll_die()
